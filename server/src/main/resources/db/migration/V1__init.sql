CREATE SEQUENCE IF NOT EXISTS USER_APP_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS USER_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS COMPARISON_SETTINGS_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS SCREENSHOT_COMPARISON_RESULT_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS CRAWLER_INSTANCE_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS ENVIRONMENT_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS IGNORE_AREA_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS SCREENSHOT_COMPARISON_RESULT_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS TEST_CASE_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS TEST_GROUP_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS TEST_RUN_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS TEST_STEP_ID_SEQ START WITH 1;
CREATE SEQUENCE IF NOT EXISTS TEST_STEP_CONFIG_ID_SEQ START WITH 1;

CREATE TABLE IF NOT EXISTS `USER` (
    ID          BIGINT          DEFAULT USER_ID_SEQ.nextval PRIMARY KEY,
    API_KEY     VARCHAR(255)    NOT NULL,
    EMAIL       VARCHAR(50),
    FIRST_NAME  VARCHAR(50),
    LAST_NAME   VARCHAR(50),
    PASSWORD    VARCHAR(100),
    USERNAME    VARCHAR(50),
    WHITE_THEME BOOLEAN(1)      NOT NULL DEFAULT FALSE,
    CONSTRAINT UK_USER_USERNAME UNIQUE (USERNAME),
    CONSTRAINT UK_USER_EMAIL UNIQUE (EMAIL)
);

CREATE TABLE IF NOT EXISTS USER_APP (
    ID          BIGINT          DEFAULT USER_APP_ID_SEQ.nextval PRIMARY KEY,
    APP_NAME    VARCHAR(100)    NOT NULL,
    `USER`      BIGINT          NOT NULL,
    CONSTRAINT UK_USER_APP_APP_NAME_USER UNIQUE (APP_NAME, `USER`)
);

CREATE TABLE IF NOT EXISTS USER_DECISION (
    ID      INT(10)         NOT NULL PRIMARY KEY,
    `VALUE`	VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS COMPARISON_SETTINGS (
    ID                              BIGINT          DEFAULT COMPARISON_SETTINGS_ID_SEQ.nextval PRIMARY KEY,
    ALLOWED_DELTA                   FLOAT           DEFAULT (0.0),
    ALLOWED_DIFFERENCE_PERCENTAGE   FLOAT,
    BASELINE_SCREENSHOT_PATH        VARCHAR(255),
    HORIZONTAL_SHIFT                INT(10)         DEFAULT 0,
    PERCEPTUAL_MODE                 BOOLEAN(1)      DEFAULT FALSE,
    SHOW_DETECTED_SHIFT             BOOLEAN(1)      DEFAULT FALSE,
    VERTICAL_SHIFT                  INT(10)         DEFAULT 0
);

CREATE TABLE IF NOT EXISTS CRAWLER_INSTANCE (
    ID                  BIGINT          DEFAULT CRAWLER_INSTANCE_ID_SEQ.nextval PRIMARY KEY,
    CURRENT_LOG	        VARCHAR(255)    NOT NULL,
    FORCE_STOP          BOOLEAN(1)      DEFAULT FALSE,
    PROGRESS            FLOAT,
    UPDATE_TIMESTAMP    TIMESTAMP,
    USER_ID	            BIGINT,
    CONSTRAINT FK_CRAWLER_INSTANCE_USER FOREIGN KEY (USER_ID) REFERENCES `USER`(ID)
);

CREATE TABLE IF NOT EXISTS ENVIRONMENT (
    ID                  BIGINT DEFAULT ENVIRONMENT_ID_SEQ.nextval PRIMARY KEY,
    BROWSER             VARCHAR(255),
    OS                  VARCHAR(255),
    VIEW_PORT_HEIGHT    INT(10),
    VIEW_PORT_WIDTH     INT(10)
);

CREATE TABLE IF NOT EXISTS IGNORE_AREA (
    ID                      BIGINT  DEFAULT IGNORE_AREA_ID_SEQ.nextval PRIMARY KEY,
    HEIGHT                  INT(10) NOT NULL,
    WIDTH                   INT(10) NOT NULL,
    X_COORDINATE            INT(10) NOT NULL,
    Y_COORDINATE            INT(10) NOT NULL,
    COMPARISON_SETTINGS_ID  BIGINT  NOT NULL,
    CONSTRAINT FK_IGNORE_AREA_COMPARISON_SETTINGS FOREIGN KEY (COMPARISON_SETTINGS_ID) REFERENCES COMPARISON_SETTINGS(ID)
);

CREATE TABLE IF NOT EXISTS SCREENSHOT_COMPARISON_RESULT (
    ID                      BIGINT          DEFAULT SCREENSHOT_COMPARISON_RESULT_ID_SEQ.nextval PRIMARY KEY,
    CURRENT_SCREENSHOT_PATH VARCHAR(255),
    DIFF_PERCENTAGE         FLOAT           NOT NULL DEFAULT (0.0),
    DIFF_SCREENSHOT_PATH    VARCHAR(255),
    PASSED                  BOOLEAN(1)      NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS TEST_RUN (
    ID              BIGINT     DEFAULT TEST_RUN_ID_SEQ.nextval PRIMARY KEY,
    PASSED          BOOLEAN(1) NOT NULL DEFAULT FALSE,
    RUN_TIMESTAMP   TIMESTAMP  NOT NULL,
    UUID            VARCHAR(255),
    TEST_CASE_ID    BIGINT     NOT NULL,
    CONSTRAINT UK_TEST_RUN_UUID UNIQUE (UUID)
);

CREATE TABLE IF NOT EXISTS TEST_CASE (
    ID                  BIGINT     DEFAULT TEST_CASE_ID_SEQ.nextval PRIMARY KEY,
    TEST_NAME           VARCHAR(2083) NOT NULL,
    UUID                VARCHAR(255),
    ENVIRONMENT_ID      BIGINT     NOT NULL,
    LATEST_TEST_RUN_ID  BIGINT,
    USER_APP_ID         BIGINT     NOT NULL,
    CONSTRAINT UK_TEST_CASE_UUID UNIQUE (UUID),
    CONSTRAINT UK_TEST_USER_APP_ENV UNIQUE (TEST_NAME, USER_APP_ID, ENVIRONMENT_ID),
    CONSTRAINT FK_TEST_CASE_ENVIRONMENT FOREIGN KEY (ENVIRONMENT_ID) REFERENCES ENVIRONMENT(ID),
    CONSTRAINT FK_TEST_CASE_TEST_RUN FOREIGN KEY (LATEST_TEST_RUN_ID) REFERENCES TEST_RUN(ID),
    CONSTRAINT FK_TEST_CASE_USER_APP FOREIGN KEY (USER_APP_ID) REFERENCES USER_APP(ID)
);

ALTER TABLE PUBLIC.TEST_RUN ADD CONSTRAINT PUBLIC.FK_TEST_RUN_TEST_CASE FOREIGN KEY(TEST_CASE_ID) REFERENCES PUBLIC.TEST_CASE(ID);

CREATE TABLE IF NOT EXISTS TEST_GROUP (
    ID          BIGINT     DEFAULT TEST_GROUP_ID_SEQ.nextval PRIMARY KEY,
    CAPTION     VARCHAR(255),
    PASSED      BOOLEAN(1) DEFAULT FALSE,
    UUID        VARCHAR(255),
    PARENT_ID   BIGINT,
    USER_APP_ID BIGINT,
    CONSTRAINT UK_TEST_GROUP_UUID UNIQUE (UUID),
    CONSTRAINT FK_TEST_GROUP_TEST_GROUP FOREIGN KEY (PARENT_ID) REFERENCES TEST_GROUP(ID),
    CONSTRAINT FK_TEST_GROUP_USER_APP FOREIGN KEY (USER_APP_ID) REFERENCES USER_APP(ID)
);

CREATE TABLE IF NOT EXISTS TEST_GROUP_CASES (
    TEST_GROUP_ID   BIGINT  NOT NULL,
    CASES_ID        BIGINT  NOT NULL,
    CONSTRAINT FK_TEST_GROUP_CASES_TEST_GROUP FOREIGN KEY (TEST_GROUP_ID) REFERENCES TEST_GROUP(ID),
    CONSTRAINT FK_TEST_GROUP_CASES_TEST_CASE FOREIGN KEY (CASES_ID) REFERENCES TEST_CASE(ID)
);

CREATE TABLE IF NOT EXISTS TEST_GROUP_CHILDREN (
    TEST_GROUP_ID   BIGINT  NOT NULL,
    CHILDREN_ID     BIGINT  NOT NULL,
    CONSTRAINT UK_TEST_GROUP_CHILDREN_CHILDREN_ID UNIQUE (CHILDREN_ID),
    CONSTRAINT FK_TEST_GROUP_CHILDREN_TEST_GROUP FOREIGN KEY (TEST_GROUP_ID) REFERENCES TEST_GROUP(ID),
    CONSTRAINT FK_TEST_GROUP_CHILDREN_TEST_CHILDREN FOREIGN KEY (CHILDREN_ID) REFERENCES TEST_GROUP(ID)
);

CREATE TABLE IF NOT EXISTS TEST_STEP_CONFIG (
    ID                      BIGINT       DEFAULT TEST_STEP_CONFIG_ID_SEQ.nextval PRIMARY KEY,
    STEP_NAME               VARCHAR(255) NOT NULL,
    COMPARISON_SETTINGS_ID  BIGINT       NOT NULL,
    TEST_CASE_ID            BIGINT       NOT NULL,
    CONSTRAINT UK_TEST_STEP_CONFIG_STEP_NAME_TEST_CASE_ID UNIQUE (STEP_NAME, TEST_CASE_ID),
    CONSTRAINT FK_TEST_STEP_CONFIG_COMPARISON_SETTINGS FOREIGN KEY (COMPARISON_SETTINGS_ID) REFERENCES COMPARISON_SETTINGS(ID),
    CONSTRAINT FK_TEST_STEP_CONFIG_TEST_CASE FOREIGN KEY (TEST_CASE_ID) REFERENCES TEST_CASE(ID)
);

CREATE TABLE IF NOT EXISTS TEST_STEP (
    ID                      BIGINT       DEFAULT TEST_STEP_ID_SEQ.nextval PRIMARY KEY,
    STEP_NAME               VARCHAR(255) NOT NULL,
    COMPARISON_RESULT_ID    BIGINT       NOT NULL,
    COMPARISON_SETTINGS_ID  BIGINT       NOT NULL,
    TEST_RUN_ID             BIGINT       NOT NULL,
    TEST_STEP_CONFIG_ID     BIGINT       NOT NULL,
    USER_DECISION_ID        INT(10)      NOT NULL,
    CONSTRAINT UK_TEST_STEP_STEP_NAME_TEST_RUN_ID UNIQUE (STEP_NAME, TEST_RUN_ID),
    CONSTRAINT FK_TEST_STEP_SCREENSHOT_COMPARISON_RESULT FOREIGN KEY (COMPARISON_RESULT_ID) REFERENCES SCREENSHOT_COMPARISON_RESULT(ID),
    CONSTRAINT FK_TEST_STEP_COMPARISON_SETTINGS FOREIGN KEY (COMPARISON_SETTINGS_ID) REFERENCES COMPARISON_SETTINGS(ID),
    CONSTRAINT FK_TEST_STEP_TEST_RUN FOREIGN KEY (TEST_RUN_ID) REFERENCES TEST_RUN(ID),
    CONSTRAINT FK_TEST_STEP_TEST_STEP_CONFIG FOREIGN KEY (TEST_STEP_CONFIG_ID) REFERENCES TEST_STEP_CONFIG(ID),
    CONSTRAINT FK_TEST_STEP_USER_DECISION FOREIGN KEY (USER_DECISION_ID) REFERENCES USER_DECISION(ID)
);

INSERT INTO USER_DECISION VALUES (1, 'NO_DECISION');
INSERT INTO USER_DECISION VALUES (2, 'BASELINE_ACCEPTED');
INSERT INTO USER_DECISION VALUES (3, 'CURRENT_ACCEPTED');

